version: '3.7'

x-airflow-image: &airflow_image apache/airflow:2.1.0-python3.7

x-airflow-common: &airflow-common
  build:
    context: images/airflow-docker
    args:
      AIRFLOW_BASE_IMAGE: *airflow_image
  image: airflow-docker
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:${DB_PORT:-5432}/airflow
    AIRFLOW__CORE__STORE_DAG_CODE: 'true'
    AIRFLOW__CORE__STORE_SERIALIZED_DAGS: 'true'
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    HOST_DATA_DIR: ${HOST_DATA_DIR}
  volumes:
    - ${HOST_DATA_DIR?:You need to set an absolute path to data directory on host machine}:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
  depends_on:
    postgres:
      condition: service_healthy

# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "${WEB_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${WEB_PORT:-8080}/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  init:
    <<: *airflow-common
    command: version
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./data:/opt/airflow/data

  
volumes:
  postgres-db-volume:
