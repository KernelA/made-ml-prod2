name: CML predict

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  # homework1:
  #   runs-on: ubuntu-20.04
  #   defaults:
  #     run:
  #       working-directory: ./ml_project

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Set up Python 3.8
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8
  #     - name: Setup CML
  #       uses: iterative/setup-cml@v1

  #     - name: Cache pip dependecies
  #       uses: actions/cache@v2
  #       id: pip-cache
  #       with:
  #         path: ~/.cache/pip
  #         key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pip-
  #     - name: Install dependencies
  #       run: |
  #         pip install wheel~=0.36
  #         pip install -r requirements.dev.txt
  #     - name: Test with pytest
  #       run: |
  #         python -m pytest ./tests

  #     - name: Lint with pylint
  #       run: |
  #         pylint --exit-zero heat_diss
  #         pylint --exit-zero config.py generate_report.py predict.py train_test_split.py train.py utils.py
  #     - name: Train log reg
  #       run: |
  #         dvc repro log-reg-predict

  #         # Report metrics
  #         echo "## Матрица ошибок" >> report.md

  #         # Publish confusion matrix 
  #         dvc repro log-reg-plot-conf-matrix
  #         dvc repro svc-plot-conf-matrix
  #         cml-publish ./data/train/log_reg/conf_matrix.png --md >> report.md
  #          cml-publish ./data/train/svc/conf_matrix.png --md >> report.md
  #     - name: Send report
  #       env:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #       run: cml-send-comment ./report.md 

  homework2:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./online_inference
    
    env:
      MODEL_PATH: ./models/svc/svc.pickle
    
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache pip dependecies
        uses: actions/cache@v2
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install wheel~=0.36
          pip install -r requirements.dev.txt
      - name: Test with pytest
        run: |
          python -m pytest ./tests

      - name: Lint with pylint
        run: |
          pylint --exit-zero heart_diss_app
          pylint --exit-zero requester.py
